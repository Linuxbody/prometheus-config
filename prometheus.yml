# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - 10.113.2.80:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - web_alert.rules
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ['10.113.2.80:9090']

  - job_name: 'http'
    metrics_path: /probe
    params:
      module: [http_2xx]  # Look for a HTTP 200 response.
    static_configs:
      - targets:
        - http://10.117.150.34:48601
        - http://www.baidu.com    #可以写多个探测
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: 10.113.2.80:9115   

  - job_name: 'ping'
    metrics_path: /probe
    params:
      module: [icmp]  
    static_configs:
      - targets: ['10.113.2.80','10.117.150.45']
        labels:
          datacenter: '北京'
      - targets: ['10.117.150.23','10.117.150.25']
        labels:
          datacenter: '上海'
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: 10.113.2.80:9115
